@using SimplCommerce.Module.Core.Models

@model SimplCommerce.Module.Catalog.Areas.Catalog.ViewModels.ProductDetail

@inject SignInManager<User> SignInManager

@{
    ViewBag.Title = Model.MetaTitle ?? Model.Name;
}

<div class="product-detail">
    <div class="row">
        <div class="col-md-6">
            <div class="sp-wrap">
                @foreach (var image in Model.Images)
                {
                    <a href="@image.Url">
                        <img src="@image.ThumbnailUrl" alt="" />
                    </a>
                }
            </div>
        </div>
        <div class="col-md-6">
            <div class="product-name">
                <h1 class="">@Model.Name</h1>
            </div>
            <ul class="list-inline product-ratings">
                <li><input type="hidden" value="@Model.RatingAverage" readonly="readonly" class="rating-loading" step="1" data-size="xs" data-show-clear="false" data-show-caption="false" /></li>
                <li class="product-review-list">
                    <span>(@Model.ReviewsCount) @Localizer["reviews"]</span>
                </li>
            </ul>
            <div class="product-short-desc">@Html.Raw(Model.ShortDescription)</div>
            @if (Model.HasVariation)
            {
                <form>
                    <div class="product-attrs">
                        @foreach (var option in Model.AvailableOptions)
                        {
                            <div>
                                <h4>@option.OptionName </h4>
                                <ul class="list-inline product-attr-options">
                                    @foreach (var value in option.Values)
                                    {
                                        var shouldChecked = Model.Variations.First().Options.Any(x => x.Value == value);
                                        <li class="list-inline-item">
                                            <input type="radio" value="@value" checked="@shouldChecked" name="@option.OptionName" />
                                            @if (Model.OptionDisplayValues.ContainsKey(value) && !String.IsNullOrWhiteSpace(Model.OptionDisplayValues[value].Value))
                                            {
                                                if (Model.OptionDisplayValues[value].DisplayType == "color")
                                                {
                                                    <label title="@value" class="color" style="background-color:@Model.OptionDisplayValues[value].Value"></label>
                                                }
                                                else
                                                {
                                                    <label>@Model.OptionDisplayValues[value].Value</label>
                                                }
                                            }
                                            else
                                            {
                                                <label>@value</label>
                                            }
                                        </li>
                                    }
                                </ul>
                            </div>
                        }
                    </div>
                </form>

                foreach (var variant in Model.Variations)
                {
                    var hidden = variant != Model.Variations.First() ? "collapse" : "";
                    <div class="product-variation @hidden" data-variation-name="@variant.NormalizedName">
                        <div class="product-price">
                            @if (variant.IsCallForPricing)
                            {
                                <span class="label label-info">@Localizer["Call for pricing"]</span>
                            }
                            else
                            {
                                <h3>@variant.CalculatedProductPrice.PriceString</h3>
                                if (variant.CalculatedProductPrice.PercentOfSaving > 0)
                                {
                                    <p class="product-price-regular">@variant.CalculatedProductPrice.OldPriceString</p>
                                    <p class="product-price-saving">@Localizer["You save"] (@(variant.CalculatedProductPrice.PercentOfSaving)%)</p>
                                }
                            }
                        </div>
                        @if (variant.StockTrackingIsEnabled && variant.StockQuantity <= 0)
                        {
                            <div class="out-of-stock">
                                <span class="label label-danger">@Localizer["Out of stock"]</span>
                            </div>
                        }
                        <div class="add-to-cart">
                            <form class="inline">
                                <input type="hidden" name="productId" value="@variant.Id" />
                                <div class="product-quantity">
                                    <button type="button" class="quantity-button" name="subtract" value="-">-</button>
                                    <input type="text" class="quantity-field" readonly="readonly" name="qty" value="1">
                                    <button type="button" class="quantity-button" name="add" value="+">+</button>
                                </div>
                                <button type="button" disabled="@(!variant.IsAllowToOrder || (variant.StockTrackingIsEnabled && variant.StockQuantity <= 0))" class="btn btn-lg btn-add-cart">@Localizer["Add to cart"]</button>
                                <div>
                                    <ul class="list-inline add-to-lists">
                                        <li class="wishlist-in">
                                            <i class="fa fa-heart"></i>
                                            @if (SignInManager.IsSignedIn(User))
                                            {
                                                <a href="#" class="add-to-wishlist">@Localizer["Add to Wishlist"]</a>
                                            }
                                            else
                                            {
                                                <a asp-area="Catalog" asp-controller="Account" asp-action="Login" asp-route-returnurl="@($"{Context.Request.Path}{Context.Request.QueryString}")">@Localizer["Add to Wishlist"]</a>
                                            }
                                        </li>
                                        <li class="compare-in">
                                            <i class="fa fa-exchange"></i>
                                            <a href="#" class="add-to-comparison">@Localizer["Add to Compare"]</a>
                                        </li>
                                    </ul>
                                </div>
                            </form>
                        </div>
                    </div>
                }
                <div class="product-variation-notavailable collapse">
                    <span class="label label-danger">@Localizer["Not available"]</span>
                </div>
            }
            else
            {
                <div class="product-price">
                    @if (Model.IsCallForPricing)
                    {
                        <span class="label label-info">@Localizer["Call for pricing"]</span>
                    }
                    else
                    {
                        <h3>@Model.CalculatedProductPrice.PriceString</h3>
                        if (Model.CalculatedProductPrice.PercentOfSaving > 0)
                        {
                            <p class="product-price-regular">@Model.CalculatedProductPrice.OldPriceString</p>
                            <p class="product-price-saving">@Localizer["You save"] (@(Model.CalculatedProductPrice.PercentOfSaving)%)</p>
                        }
                    }
                </div>
                if (Model.StockTrackingIsEnabled && Model.StockQuantity <= 0)
                {
                    <div class="out-of-stock">
                        <span class="label label-danger">@Localizer["Out of stock"]</span>
                    </div>
                }
                <div class="add-to-cart">
                    <form class="inline">
                        <input type="hidden" name="productId" value="@Model.Id" />
                        <div class="product-quantity">
                            <button type="button" class="quantity-button" name="subtract" value="-">-</button>
                            <input type="text" class="quantity-field" readonly="readonly" name="qty" value="1">
                            <button type="button" class="quantity-button" name="add" value="+">+</button>
                        </div>
                        <button type="button" disabled="@(!Model.IsAllowToOrder || (Model.StockTrackingIsEnabled && Model.StockQuantity <= 0))" class="btn btn-lg btn-add-cart">@Localizer["Add to cart"]</button>
                        <div>
                            <ul class="list-inline add-to-lists">
                                <li class="wishlist-in">
                                    <i class="fa fa-heart"></i>
                                    @if (SignInManager.IsSignedIn(User))
                                    {
                                        <a href="#" class="add-to-wishlist">@Localizer["Add to Wishlist"]</a>
                                    }
                                    else
                                    {
                                        <a asp-area="Catalog" asp-controller="Account" asp-action="Login" asp-route-returnurl="@($"{Context.Request.Path}{Context.Request.QueryString}")">@Localizer["Add to Wishlist"]</a>
                                    }
                                </li>
                                <li class="compare-in">
                                    <i class="fa fa-exchange"></i>
                                    <a href="#" class="add-to-comparison">@Localizer["Add to Compare"]</a>
                                </li>
                            </ul>
                        </div>
                    </form>
                </div>
            }
        </div>
    </div>
</div>

<script simpl-append-version="true" src="~/lib/smoothproducts/js/smoothproducts.js"></script>
<script simpl-append-version="true" src="~/_content/SimplCommerce.Module.Catalog/product-detail.js"></script>
